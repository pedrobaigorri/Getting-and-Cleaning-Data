len(coordinates)
nchar(coordinates)
nchar(as.char(coordinates)
)
nchar(as.character(coordinates)
)
source('D:/DATOS_B2B/mWAN/data_processing_mwan.R')
source('D:/DATOS_B2B/mWAN/data_processing_mwan.R')
source('D:/DATOS_B2B/mWAN/data_processing_mwan.R')
source('D:/DATOS_B2B/mWAN/data_processing_mwan.R')
source('D:/DATOS_B2B/mWAN/data_processing_mwan.R')
file <- "D://DATOS_B2B//IRB//Billing_IRB//Mobile/G4S-Graph_v2.txt"
df <- read.table(file, sep=",", header = T)
View(df)
file <- "D://DATOS_B2B//IRB//Billing_IRB//Mobile/G4S-Graph_v2.txt"
df <- read.table(file, sep=",", header = T)
file <- "D://DATOS_B2B//IRB//Billing_IRB//Mobile/G4S-Graph_v2.txt"
df <- read.table(file, sep=",", header = T)
file <- "D://DATOS_B2B//IRB//Billing_IRB//Mobile/G4S-Graph_v2.csv"
df <- read.table(file, sep=";", header = T)
df2 <- df[,"Target"]
df2
names(df2) <- "Target2"
df2
df2 <- df[,"Target"]
df2
names(df2)
df2 <- as.dataframe(df2)
df2 <- dataframe(df2)
df2 <- data.frame(df2)
df2
names(df2)
df2 <- as.data.frame(df[,"Target"])
names(df2) <- "Target2"
df2
View(df2)
df3 <- merge(df2, df, by.x ="Target2", by.y ="Source")
View(df)
library (reshape2)
head(mtcars)
mtcars$carname <- rownames(mtcars)
head(mtcars)
carMelt <- melt(mtcars, id=c("carname", "gear", "cyl"), measure.vars = c("mpg", "hp"))
head(carMelt)
tail(carMelt)
cylData <- dcast(carMelt, cyl~variable)
cylData <- dcast(carMelt, cyl ~ variable)
cylData
cylData <- dcast(carMelt, cyl ~ variable, mean)
cylData
head(InsectSprays)
class(head$count)
class(InsectSprays$count)
InsectSprays
tapply(InsectSprays$count, InsectSprays$sum, sum)
tapply(InsectSprays$count, InsectSprays$spray, sum)
spIns <- split(InsectSprays$count, InsectSprays$spray)
spIns
sprCount <- lapply(spIns, sum)
sprCount
unlist(sprCount)
sprCount
s <- unlist(sprCount)
sprCount
s
sapply(spIns, sum)
spIns
sapply(spIns, sum)
class(sapply(spIns, sum))
s <- sapply(spIns, sum)
s <- as.data.frame(s)
head(s)
s$spray <- rownames(s)
head(s)
colnames(s)[1] <- "count"
head(s)
ddply(InsectSprays, .(spray), summarize, sum = sum(count))
library(plyr)
ddply(InsectSprays, .(spray), summarize, sum = sum(count))
ddply(InsectSprays, .(count), summarize, sum = sum(count))
ddply(InsectSprays, .(spray), summarize, sum = sum(count))
spraySums <- ddply(InsectSprays, .(spray), summarize, sum = ave(count, FUN=(sum)))
spraySums
{
#loading training and test datasets
trainFile <- "./data/UCI HAR Dataset/train/X_train.txt"
train <- read.table(trainFile)
head(train)
dim(train) # 7352 X 561
testFile <- "./data/UCI HAR Dataset/test/X_test.txt"
test <- read.table(testFile)
head(test)
dim(test) # 2947 x 561
# merging datasets
train_test <- rbind(train, test)
# checking
dim(train_test) # 10299 x 561
dim(test)[1] + dim(train)[1] # 10299
# loading labels for both datasets
labelTrainFile <- "./data/UCI HAR Dataset/train/y_train.txt"
labelTrain <- read.table(labelTrainFile)
head(labelTrain)
dim(labelTrain) # 7352 x 1
labelTestFile <- "./data/UCI HAR Dataset/test/y_test.txt"
labelTest <- read.table(labelTestFile)
head(labelTest)
dim(labelTest) # 2947 x 1
# merging datasets
label_train_test <- rbind(labelTrain, labelTest)
# checking
dim(label_train_test) # 10299 x 1
dim(labelTest)[1] + dim(labelTrain)[1] #10299
# adding a index as reference to avoid problems of moving rows with data manipulation
train_test$index <- seq(1:nrow(train_test))
label_train_test$index <- seq(1:nrow(label_train_test))
head(train_test)
head(label_train_test)
# repeating the process for the subject_train and subject_test datasets
subjectTrainFile <- "./data/UCI HAR Dataset/train/subject_train.txt"
subjectTrain <- read.table(subjectTrainFile)
head(subjectTrain)
dim(subjectTrain) # 7352 X 1
subjectTestFile <- "./data/UCI HAR Dataset/test/subject_test.txt"
subjectTest <- read.table(subjectTestFile)
head(subjectTest)
dim(subjectTest) # 2947 x 1
subject_train_test <- rbind(subjectTrain, subjectTest)
dim(subject_train_test) # 10299 x 1
dim(subjectTest)[1] + dim(subjectTrain)[1] # 10299
subject_train_test$index <- seq(1:nrow(subject_train_test))
head(subject_train_test)
}
#################################################################################################
# Step 2: Extracts only the measurements on the mean and standard deviation for each measurement.
#################################################################################################
{
#loading the features dataset with the name of the variables
featuresFile <- "./data/UCI HAR Dataset/features.txt"
features <- read.table(featuresFile)
head(features)
dim(features) # 561 x 2
# getting the variables of interest
mean_std_variables <- grepl("mean[(]|std()", features[,2])
mean_std_variables[562] <- TRUE #index variable
table(mean_std_variables)
# subsetting the dataset with the desired variables
train_test <- train_test[, mean_std_variables]
dim(train_test) #10299 x 2
#subsetting features dataset with the names required for step 4
features <- features[mean_std_variables[1:nrow(features)], 2]
}
#################################################################################################
# Step 3: Uses descriptive activity names to name the activities in the data set.
#################################################################################################
{
# loading activity file
activityFile <- "./data/UCI HAR Dataset/activity_labels.txt"
labels <- read.table(activityFile)
head(labels)
dim(labels) # 6 x 2
# merging with label dataset
label_train_test <- merge(label_train_test, labels)
#removing column V1
label_train_test <- select(label_train_test, -V1)
# setting colname
colnames(label_train_test)[2] <- "activity"
# merging to train_test dataset
train_test <- merge(train_test, label_train_test, by.x = "index", by.y = "index")
head(train_test)
dim(train_test) # 10299 x 68
# merging also subjects dataset
colnames(subject_train_test)[1] <- "subject"
train_test <- merge(train_test, subject_train_test, by.x = "index", by.y = "index")
head(train_test)
dim(train_test) # 10299 x 69
}
#################################################################################################
# Step 4: Appropriately labels the data set with descriptive variable names.
#################################################################################################
{
#subject and labels variable names already set
#only measurement labels are missing loaded in features
# adapting the names of the variables to make them more clear
features <- gsub("\\()", "", features)
features <- gsub("^f", "frequency", features)
features <- gsub("^t", "time", features)
features <- gsub("Acc", "Accelerometer", features)
features <- gsub("Gyro", "Gyroscope", features)
features <- gsub("Mag", "Magnitude", features)
# dropping the index column as now is not required
train_test <- select(train_test, -index)
dim(train_test) # 10299 x 68
# setting the colnames of the dataset
colnames(train_test)[1:66] <- features
}
setwd("D://Pedro//TID//BI4TD//DATA SCIENCE//COURSERA//Code//Data Cleaning")
{
#loading training and test datasets
trainFile <- "./data/UCI HAR Dataset/train/X_train.txt"
train <- read.table(trainFile)
head(train)
dim(train) # 7352 X 561
testFile <- "./data/UCI HAR Dataset/test/X_test.txt"
test <- read.table(testFile)
head(test)
dim(test) # 2947 x 561
# merging datasets
train_test <- rbind(train, test)
# checking
dim(train_test) # 10299 x 561
dim(test)[1] + dim(train)[1] # 10299
# loading labels for both datasets
labelTrainFile <- "./data/UCI HAR Dataset/train/y_train.txt"
labelTrain <- read.table(labelTrainFile)
head(labelTrain)
dim(labelTrain) # 7352 x 1
labelTestFile <- "./data/UCI HAR Dataset/test/y_test.txt"
labelTest <- read.table(labelTestFile)
head(labelTest)
dim(labelTest) # 2947 x 1
# merging datasets
label_train_test <- rbind(labelTrain, labelTest)
# checking
dim(label_train_test) # 10299 x 1
dim(labelTest)[1] + dim(labelTrain)[1] #10299
# adding a index as reference to avoid problems of moving rows with data manipulation
train_test$index <- seq(1:nrow(train_test))
label_train_test$index <- seq(1:nrow(label_train_test))
head(train_test)
head(label_train_test)
# repeating the process for the subject_train and subject_test datasets
subjectTrainFile <- "./data/UCI HAR Dataset/train/subject_train.txt"
subjectTrain <- read.table(subjectTrainFile)
head(subjectTrain)
dim(subjectTrain) # 7352 X 1
subjectTestFile <- "./data/UCI HAR Dataset/test/subject_test.txt"
subjectTest <- read.table(subjectTestFile)
head(subjectTest)
dim(subjectTest) # 2947 x 1
subject_train_test <- rbind(subjectTrain, subjectTest)
dim(subject_train_test) # 10299 x 1
dim(subjectTest)[1] + dim(subjectTrain)[1] # 10299
subject_train_test$index <- seq(1:nrow(subject_train_test))
head(subject_train_test)
}
{
#loading the features dataset with the name of the variables
featuresFile <- "./data/UCI HAR Dataset/features.txt"
features <- read.table(featuresFile)
head(features)
dim(features) # 561 x 2
# getting the variables of interest
mean_std_variables <- grepl("mean[(]|std()", features[,2])
mean_std_variables[562] <- TRUE #index variable
table(mean_std_variables)
# subsetting the dataset with the desired variables
train_test <- train_test[, mean_std_variables]
dim(train_test) #10299 x 2
#subsetting features dataset with the names required for step 4
features <- features[mean_std_variables[1:nrow(features)], 2]
}
{
# loading activity file
activityFile <- "./data/UCI HAR Dataset/activity_labels.txt"
labels <- read.table(activityFile)
head(labels)
dim(labels) # 6 x 2
# merging with label dataset
label_train_test <- merge(label_train_test, labels)
#removing column V1
label_train_test <- select(label_train_test, -V1)
# setting colname
colnames(label_train_test)[2] <- "activity"
# merging to train_test dataset
train_test <- merge(train_test, label_train_test, by.x = "index", by.y = "index")
head(train_test)
dim(train_test) # 10299 x 68
# merging also subjects dataset
colnames(subject_train_test)[1] <- "subject"
train_test <- merge(train_test, subject_train_test, by.x = "index", by.y = "index")
head(train_test)
dim(train_test) # 10299 x 69
}
#################################################################################################
# Step 4: Appropriately labels the data set with descriptive variable names.
#################################################################################################
{
#subject and labels variable names already set
#only measurement labels are missing loaded in features
# adapting the names of the variables to make them more clear
features <- gsub("\\()", "", features)
features <- gsub("^f", "frequency", features)
features <- gsub("^t", "time", features)
features <- gsub("Acc", "Accelerometer", features)
features <- gsub("Gyro", "Gyroscope", features)
features <- gsub("Mag", "Magnitude", features)
# dropping the index column as now is not required
train_test <- select(train_test, -index)
dim(train_test) # 10299 x 68
# setting the colnames of the dataset
colnames(train_test)[1:66] <- features
}
library(dplyr)
{
#subject and labels variable names already set
#only measurement labels are missing loaded in features
# adapting the names of the variables to make them more clear
features <- gsub("\\()", "", features)
features <- gsub("^f", "frequency", features)
features <- gsub("^t", "time", features)
features <- gsub("Acc", "Accelerometer", features)
features <- gsub("Gyro", "Gyroscope", features)
features <- gsub("Mag", "Magnitude", features)
# dropping the index column as now is not required
train_test <- select(train_test, -index)
dim(train_test) # 10299 x 68
# setting the colnames of the dataset
colnames(train_test)[1:66] <- features
}
agg_train_test <- aggregate(train_test, by=list(train_test$activity, train_test$subject), FUN=mean)
agg_train_test <- aggregate(train_test, by=list(train_test$activity, train_test$subject), FUN=mean)
head(train_test)
dim(train_test)
{
#loading training and test datasets
trainFile <- "./data/UCI HAR Dataset/train/X_train.txt"
train <- read.table(trainFile)
head(train)
dim(train) # 7352 X 561
testFile <- "./data/UCI HAR Dataset/test/X_test.txt"
test <- read.table(testFile)
head(test)
dim(test) # 2947 x 561
# merging datasets
train_test <- rbind(train, test)
# checking
dim(train_test) # 10299 x 561
dim(test)[1] + dim(train)[1] # 10299
# loading labels for both datasets
labelTrainFile <- "./data/UCI HAR Dataset/train/y_train.txt"
labelTrain <- read.table(labelTrainFile)
head(labelTrain)
dim(labelTrain) # 7352 x 1
labelTestFile <- "./data/UCI HAR Dataset/test/y_test.txt"
labelTest <- read.table(labelTestFile)
head(labelTest)
dim(labelTest) # 2947 x 1
# merging datasets
label_train_test <- rbind(labelTrain, labelTest)
# checking
dim(label_train_test) # 10299 x 1
dim(labelTest)[1] + dim(labelTrain)[1] #10299
# adding a index as reference to avoid problems of moving rows with data manipulation
train_test$index <- seq(1:nrow(train_test))
label_train_test$index <- seq(1:nrow(label_train_test))
head(train_test)
head(label_train_test)
# repeating the process for the subject_train and subject_test datasets
subjectTrainFile <- "./data/UCI HAR Dataset/train/subject_train.txt"
subjectTrain <- read.table(subjectTrainFile)
head(subjectTrain)
dim(subjectTrain) # 7352 X 1
subjectTestFile <- "./data/UCI HAR Dataset/test/subject_test.txt"
subjectTest <- read.table(subjectTestFile)
head(subjectTest)
dim(subjectTest) # 2947 x 1
subject_train_test <- rbind(subjectTrain, subjectTest)
dim(subject_train_test) # 10299 x 1
dim(subjectTest)[1] + dim(subjectTrain)[1] # 10299
subject_train_test$index <- seq(1:nrow(subject_train_test))
head(subject_train_test)
}
{
#loading the features dataset with the name of the variables
featuresFile <- "./data/UCI HAR Dataset/features.txt"
features <- read.table(featuresFile)
head(features)
dim(features) # 561 x 2
# getting the variables of interest
mean_std_variables <- grepl("mean[(]|std()", features[,2])
mean_std_variables[562] <- TRUE #index variable
table(mean_std_variables)
# subsetting the dataset with the desired variables
train_test <- train_test[, mean_std_variables]
dim(train_test) #10299 x 2
#subsetting features dataset with the names required for step 4
features <- features[mean_std_variables[1:nrow(features)], 2]
}
dim(train_test) #10299 x 2
{
# loading activity file
activityFile <- "./data/UCI HAR Dataset/activity_labels.txt"
labels <- read.table(activityFile)
head(labels)
dim(labels) # 6 x 2
# merging with label dataset
label_train_test <- merge(label_train_test, labels)
#removing column V1
label_train_test <- select(label_train_test, -V1)
# setting colname
colnames(label_train_test)[2] <- "activity"
# merging to train_test dataset
train_test <- merge(train_test, label_train_test, by.x = "index", by.y = "index")
head(train_test)
dim(train_test) # 10299 x 68
# merging also subjects dataset
colnames(subject_train_test)[1] <- "subject"
train_test <- merge(train_test, subject_train_test, by.x = "index", by.y = "index")
head(train_test)
dim(train_test) # 10299 x 69
}
{
#subject and labels variable names already set
#only measurement labels are missing loaded in features
# adapting the names of the variables to make them more clear
features <- gsub("\\()", "", features)
features <- gsub("^f", "frequency", features)
features <- gsub("^t", "time", features)
features <- gsub("Acc", "Accelerometer", features)
features <- gsub("Gyro", "Gyroscope", features)
features <- gsub("Mag", "Magnitude", features)
# dropping the index column as now is not required
train_test <- select(train_test, -index)
dim(train_test) # 10299 x 68
# setting the colnames of the dataset
colnames(train_test)[1:66] <- features
}
colnames(train_test)
agg_train_test <- aggregate(train_test, by=list(train_test$activity, train_test$subject), FUN=mean)
agg_train_test
warning()
agg_train_test <- aggregate(train_test, by=list(train_test$activity, train_test$subject), FUN=mean)
warnings()
agg_train_test
class(train_test$activity)
mtcars$vs <- as.factor(mtcars$vs)
aggdata <- aggregate(mtcars, by=list(cyl, vs), FUN=mean, na.rm=TRUE)
attach(mtcars)
mtcars
mtcars$mpg <- as.character(mtcars$mpg)
mtcars$vs <- as.factor(mtcars$vs)
aggdata <- aggregate(mtcars, by=list(cyl, vs), FUN=mean, na.rm=TRUE)
aggdata
agg_train_test <- aggregate(. ~ subject ‐ activity, data = train_test, mean)
agg_train_test
head(agg_train_test)
agg_train_test <- aggregate(. ~ subject - activity, data = train_test, mean)
head(agg_train_test)
agg_train_test2 <- arrange(agg_train_test, subject, activity)
head(agg_train_test2)
str(agg_train_test2)
dim(agg_train_test)
write.csv(agg_train_test, "avg_train_test.csv")
write.csv(agg_train_test, "./data/avg_train_test.csv")
write.csv(agg_train_test, "./data/avg_train_test.csv", row.names = F)
agg_train_test <- aggregate(. ~ subject - activity, data = train_test, mean)
head(agg_train_test)
dim(agg_train_test) # 180 x 68
# writing it to a file
write.csv(agg_train_test, "./data/avg_train_test.csv", row.names = F)
aggdata <- aggregate(. ~ cyl - vs, data = mtcars, mean)
mtcars
mtcars$mpg <- as.character(mtcars$mpg)
mtcars$vs <- as.factor(mtcars$vs)
aggdata <- aggregate(. ~ cyl - vs, data = mtcars, mean)
warnings()
aggdata
aggdata <- aggregate(. ~ cyl - vs, data = mtcars, mean)
warnings()
mtcars
colnames(mtcars)
class(mtcars$hp)
class(mtcars$disp)
aggdata <- aggregate(. ~ cyl - vs, data = mtcars, mean)
warnings()
aggdata
mtcars
aggdata <- aggregate.table(mtcars, cyl, vs, FUN= mean)
library(gdata)
aggdata <- aggregate.table(mtcars, cyl, vs, FUN= mean)
install.packages("gdata")
install.packages("gdata")
library(gdata)
aggdata <- aggregate.table(mtcars, cyl, vs, FUN= mean)
library(gdata)
aggdata <- aggregate.table(mtcars, cyl, vs, FUN= mean)
aggdata <- aggregate(mtcars, cyl, vs, FUN= mean)
aggdata <- aggregate(mtcars, list(cyl,vs), FUN= mean)
aggdata
mtcars$vs <- as.factor(mtcars$vs)
aggdata <- aggregate(mtcars, list(cyl,vs), FUN= mean)
aggdata
agg_train_test <- aggregate(train_test, list(subject, activity), FUN= mean)
agg_train_test <- aggregate(train_test, list(train_test$subject, train_test$activity), FUN= mean)
dim(agg_train_test) # 180 x 68
head(agg_train_test)
dim(train_test)
dim(agg_train_test) # 180 x 68
head(agg_train_test)
agg_train_test <- select(agg_train_test, -activity)
agg_train_test <- select(agg_train_test, -subject)
head(agg_train_test)
dim(agg_train_test) # 180 x 68
agg_train_test <- aggregate(train_test, list(train_test$subject, train_test$activity), FUN= mean)
# remove the replicated variables subject & list
agg_train_test <- select(agg_train_test, -activity)
agg_train_test <- select(agg_train_test, -subject)
#rename grouping variables to subject & activity
colnames(agg_train_test)[1] <- "subject"
colnames(agg_train_test)[2] <- "activity"
head(agg_train_test)
dim(agg_train_test) # 180 x 68
