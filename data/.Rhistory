s <- sapply(spIns, sum)
spIns
s <- as.data.frame(s)
head(s)
s$spray <- rownames(s)
head(s)
colnames(s)[1] <- "count"
library(plyr)
head(s)
s <- sapply(spIns, sum)
spIns
unlist(sprCount)
library(plyr)
ddply(InsectSprays, .(spray), summarize, sum = sum(count))
spraySums <- ddply(InsectSprays, .(spray), summarize, sum = ave(count, FUN=(sum)))
spraySums
data(mtcars)
mtcars
narrow <‐ mtcars[, c("cyl", "gear", "vs", "mpg")]
narrow
narrow <- mtcars[, c("cyl", "gear", "vs", "mpg")]
narrow
library(reshape2)
wide1 <‐ tidied <‐ dcast(narrow, cyl + gear ~ vs, max)
data(mtcars)
mtcars
narrow <- mtcars[, c("cyl", "gear", "vs", "mpg")]
narrow
library(reshape2)
wide1 <‐ tidied <‐ dcast(narrow, cyl + gear ~ vs, max)
wide1
data(mtcars)
mtcars
narrow <- mtcars[, c("cyl", "gear", "vs", "mpg")]
narrow
library(reshape2)
wide1 <‐ tidied <‐ dcast(narrow, cyl + gear ~ vs, max)
wide1
narrow <- mtcars[, c("cyl", "gear", "vs", "mpg", "disp")]
narrow
library(reshape2)
wide1 <‐ tidied <‐ dcast(narrow, cyl + gear ~ vs, max)
wide1
wide1 <‐ tidied <‐ dcast(narrow, cyl + gear ~ vs  ~ mpg, max)
narrow <- mtcars[, c("cyl", "gear", "vs", "mpg")]
narrow
library(reshape2)
wide1 <‐ tidied <‐ dcast(narrow, cyl + gear ~ vs, max)
wide1
wide2 <‐ tidied <‐ dcast(narrow, cyl + vs ~ gear, max)
wide2
notverywide <‐ aggregate(mpg ~ gear + vs + cyl, data = narrow, max)
notverywide
mtcars
narrow <- mtcars[, c("cyl", "gear", "vs", "mpg", "disp")]
notverywide <‐ aggregate(mpg ~ gear + vs + cyl, data = narrow, max)
notverywide
notverywide <‐ aggregate(mpg + disp ~ gear + vs + cyl, data = narrow, max)
notverywide
notverywide <‐ aggregate(c("mpg","disp") ~ gear + vs + cyl, data = narrow, max)
notverywide <‐ aggregate(disp ~ gear + vs + cyl, data = narrow, max)
notverywide
notverywide <‐ aggregate(disp ~ gear + vs + cyl, mpg ~ gear + vs + cyl, data = narrow, max)
notverywide <‐ aggregate(disp ~ mpg ~  gear + vs + cyl, data = narrow, max)
notverywide <‐ aggregate(list(disp, mpg)  ~  gear + vs + cyl, data = narrow, max)
notverywide <‐ aggregate(disp  ~  gear + vs + cyl, data = narrow, max)
untidy <‐ with(narrow, tapply(mpg, list(cyl, vs, gear), max))
untidy
wide1 <‐ tidied <‐ dcast(narrow, cyl + gear ~ vs, max)
wide1
wide2 <‐ tidied <‐ dcast(narrow, cyl + vs ~ gear, max)
wide2
notverywide <‐ aggregate(disp  ~  gear + vs + cyl, data = narrow, max)
notverywide
library (reshape2)
head(mtcars)
mtcars$carname <- rownames(mtcars)
head(mtcars)
carMelt <- melt(mtcars, id=c("carname", "gear", "cyl"), measure.vars = c("mpg", "hp"))
head(carMelt)
mx_deaths <- read.table(file, sep = " ", header = TRUE)
setwd("D://Pedro//TID//BI4TD//DATA SCIENCE//COURSERA//Code//Data Cleaning//data")
file <- "mx_deaths.txt"
mx_deaths <- read.table(file, sep = " ", header = TRUE)
mx_deaths
mx_deaths <- read.table(file, sep = " ", header = TRUE, row.names = FALSE)
mtcars
mx_deaths <- read.table(file, sep = " ", header = TRUE, row.names = NULL)
mx_deaths
mx_deaths <- read.table(file, sep = " ", header = TRUE)
row.names(mx_deaths) <- ""
rownames(mx_deaths) <- ""
rownames(mx_deaths) <- "k"
rownames(mx_deaths) <- rep("", lenght(mx_deaths))
rownames(mx_deaths) <- rep("", numrows(mx_deaths))
rownames(mx_deaths) <- rep("", nrow(mx_deaths))
mx_deaths <- read.table(file, sep = " ", header = TRUE)
mx_deaths
deaths <- read.table(file, sep = " ", header = TRUE)
hod2 <- count(deaths, c("hod", "cod"))
hod2
hod2 <- subset(hod2, !is.na(hod))
hod2
hod2 <- subset(hod2, !is.na(hod2))
hod2
hod2 <- count(deaths, c("hod", "cod"))
hod2
hod2 <- subset(hod2, !is.na(hod))
hod2
hod3 <- subset(hod2, !is.na(hod))
hod3
hod_all <- subset(count(deaths, "hod"), !is.na(hod))
hod_all
options(stringsAsFactors = F)
library(reshape2)
library(ggplot2)
library(plyr)
library(stringr)
library(MASS)
source("../data/xtable.r")
if (!file.exists("deaths.rds")) {
src <- "https://github.com/hadley/mexico-mortality/raw/master/deaths/deaths08.csv.bz2"
file.download(src, "deaths.csv.bz2", quiet = TRUE)
deaths <- read.csv("deaths08.csv.bz2")
unlink("deaths08.csv.bz2")
deaths$hod[deaths$hod == 99] <- NA
deaths$hod[deaths$hod == 24] <- 0
deaths$hod[deaths$hod == 0] <- NA
deaths$hod <- as.integer(deaths$hod)
deaths <- arrange(deaths, yod, mod, dod, hod, cod)
deaths <- deaths[c("yod", "mod", "dod", "hod", "cod")]
saveRDS(deaths, "deaths.rds")
}
if (!file.exists("deaths.rds")) {
src <- "https://github.com/hadley/mexico-mortality/raw/master/deaths/deaths08.csv.bz2"
download.file(src, "deaths.csv.bz2", quiet = TRUE)
deaths <- read.csv("deaths08.csv.bz2")
unlink("deaths08.csv.bz2")
deaths$hod[deaths$hod == 99] <- NA
deaths$hod[deaths$hod == 24] <- 0
deaths$hod[deaths$hod == 0] <- NA
deaths$hod <- as.integer(deaths$hod)
deaths <- arrange(deaths, yod, mod, dod, hod, cod)
deaths <- deaths[c("yod", "mod", "dod", "hod", "cod")]
saveRDS(deaths, "deaths.rds")
}
src <- "https://github.com/hadley/mexico-mortality/raw/master/deaths/deaths08.csv.bz2"
download.file(src, "deaths.csv.bz2", quiet = TRUE)
deaths <- read.csv("deaths08.csv.bz2")
deaths <- read.csv("deaths.csv.bz2")
unlink("deaths.csv.bz2")
deaths$hod[deaths$hod == 99] <- NA
deaths$hod[deaths$hod == 24] <- 0
deaths$hod[deaths$hod == 0] <- NA
deaths$hod <- as.integer(deaths$hod)
deaths <- arrange(deaths, yod, mod, dod, hod, cod)
deaths <- deaths[c("yod", "mod", "dod", "hod", "cod")]
saveRDS(deaths, "deaths.rds")
deaths <- readRDS("deaths.rds")
deaths
head(deaths)
head(deaths, 100)
head(deaths)
ok <- subset(deaths, yod == 2008 & mod != 0 & dod != 0)
xtable(ok[c(1, 1:14 * 2000), c("yod", "mod", "dod", "hod", "cod")],
"raw.tex")
library(xtable)
install.packages("xtable")
library(xtable)
xtable(ok[c(1, 1:14 * 2000), c("yod", "mod", "dod", "hod", "cod")],
"raw.tex")
head(deaths)
codes <- read.csv("icd-main.csv")
codes <- read.csv("icd-main.csv")
head(codes)
codes$disease <- sapply(codes$disease, function(x)
str_c(strwrap(x, width = 30), collapse = "\n"))
names(codes)[1] <- "cod"
codes <- codes[!duplicated(codes$cod), ]
head(codes)
codes <- read.csv("icd-main.csv")
head(codes)
codes$disease <- sapply(codes$disease, function(x)
str_c(strwrap(x, width = 30), collapse = "\n"))
names(codes)[1] <- "cod"
codes <- codes[!duplicated(codes$cod), ]
head(codes)
hod_all <- subset(count(deaths, "hod"), !is.na(hod))
head(hod_all)
head(deaths)
qplot(hod, freq, data = hod_all, geom = "line") +
scale_y_continuous("Number of deaths", labels = function(x) format(x, big.mark = ",")) +
xlab("Hour of day")
ggsave("overall.pdf", width = 10, height = 6)
hod2 <- count(deaths, c("cod", "hod"))
hod2 <- subset(hod2, !is.na(hod))
hod2 <- join(hod2, codes)
head(hod2)
hod2 <- ddply(hod2, "cod", transform, prop = freq / sum(freq))
head(hod2)
overall <- ddply(hod2, "hod", summarise, freq_all = sum(freq))
overall <- mutate(overall, prop_all = freq_all / sum(freq_all))
hod2 <- join(overall, hod2, by = "hod")
head(hod2)
# Pick better subset of rows to show
cods <- join(arrange(count(deaths, "cod"), desc(freq)), codes)
mutate(tail(subset(cods, freq > 100), 30), disease = str_sub(disease, 1, 30))
hod3 <- subset(hod2, cod %in% c("I21", "N18", "E84", "B16") & hod >= 8 & hod <= 12)[1:15, c("hod", "cod", "disease", "freq", "prop", "freq_all", "prop_all")]
xtable(hod3[c("hod", "cod", "freq")], "counts.tex")
xtable(hod3[c("disease")], "counts-disease.tex")
xtable(hod3[5], "counts-prop.tex")
xtable(hod3[6:7], "counts-all.tex")
devi <- ddply(hod2, "cod", summarise, n = sum(freq),
dist = mean((prop - prop_all)^2))
devi <- subset(devi, n > 50)
# Find outliers
xlog10 <- scale_x_log10(
breaks = c(100, 1000, 10000),
labels = c(100, 1000, 10000),
minor_breaks = log10(outer(1:9, 10^(1:5), "*")))
ylog10 <- scale_y_log10(
breaks = 10 ^ -c(3, 4, 5),
labels = c("0.001", "0.0001", "0.00001"),
minor_breaks = log10(outer(1:9, 10^-(3:6), "*")))
qplot(n, dist, data = devi)
ggsave("n-dist-raw.pdf", width = 6, height = 6)
qplot(n, dist, data = devi) +
geom_smooth(method = "rlm", se = F) +
xlog10 +
ylog10
ggsave("n-dist-log.pdf", width = 6, height = 6)
devi$resid <- resid(rlm(log(dist) ~ log(n), data = devi))
coef(rlm(log(dist) ~ log(n), data = devi))
ggplot(devi, aes(n, resid)) +
geom_hline(yintercept = 1.5, colour = "grey50") +
geom_point() +
xlog10
ggsave("n-dist-resid.pdf", width = 6, height = 6)
unusual <- subset(devi, resid > 1.5)
hod_unusual_big <- match_df(hod2, subset(unusual, n > 350))
hod_unusual_sml <- match_df(hod2, subset(unusual, n <= 350))
# Visualise unusual causes of death
ggplot(hod_unusual_big, aes(hod, prop)) +
geom_line(aes(y = prop_all), data = overall, colour = "grey50") +
geom_line() +
facet_wrap(~ disease, ncol = 3)
ggsave("unusual-big.pdf", width = 8, height = 6)
last_plot() %+% hod_unusual_sml
ggsave("unusual-sml.pdf", width = 8, height = 4)
library(dplyr)
deaths <- readRDS("chicago.rds")
library(dplyr)
deaths <- readRDS("chicago.rds")
setwd("D://Pedro//TID//BI4TD//DATA SCIENCE//COURSERA//Code//Data Cleaning//data")
deaths <- readRDS("chicago.rds")
head(select(chicago, -(city:dptp)))
chicago <- readRDS("chicago.rds")
head(select(chicago, 1:5))
#select
head(select(chicago, -(city:dptp)))
head(chicago)
head(select(chicago, 1:5))
head(select(chicago, -(city:dptp)))
chic.f <- filter(chicago, pm25tmean2 > 30)
head(select(chic.f, 1:3, pm25tmean2), 10)
chicago <- arrange(chicago, date)
head(select(chicago, date, pm25tmean2), 3)
tail(select(chicago, date, pm25tmean2), 3)
chicago <- rename(chicago, dewpoint = dptp, pm25 = pm25tmean2)
head(chicago[, 1:5], 3)
chicago <- mutate(chicago, pm25detrend=pm25-mean(pm25, na.rm=TRUE))
head(select(chicago, pm25, pm25detrend))
chicago <- readRDS("chicago.rds")
chicago <- mutate(chicago, pm25detrend=pm25-mean(pm25, na.rm=TRUE))
chicago <- rename(chicago, dewpoint = dptp, pm25 = pm25tmean2)
chicago <- mutate(chicago, pm25detrend=pm25-mean(pm25, na.rm=TRUE))
head(select(chicago, pm25, pm25detrend))
head(select(chicago, pm25, pm25detrend), 100)
chicago <- readRDS("chicago.rds")
head(chicago)
chicago <- rename(chicago, dewpoint = dptp, pm25 = pm25tmean2)
head(chicago[, 1:5], 3)
chicago <- mutate(chicago, pm25detrend=pm25-mean(pm25, na.rm=TRUE))
head(select(chicago, pm25, pm25detrend), 100)
head(select(chicago, pm25, pm25detrend), 10000)
chicago <- mutate(chicago, tempcat = factor(1 * (tmpd > 80),labels = c("cold", "hot")))
head(chicago)
tail(chicago)
head(select(chicago, tmpd > 80))
head(filter(chicago, tmpd > 80))
tail(filter(chicago, tmpd > 80))
head(filter(chicago, tmpd < 80))
hotcold <- group_by(chicago, tempcat)
head(hotcold)
head(chicago)
head(hotcold)
tail(hotcold)
View(hotcold)
View(chicago)
summarize(hotcold, pm25 = mean(pm25, na.rm = TRUE),
o3 = max(o3tmean2),
no2 = median(no2tmean2))
summarize(chicago, pm25 = mean(pm25, na.rm = TRUE),
o3 = max(o3tmean2),
no2 = median(no2tmean2))
chicago %>% mutate(month = as.POSIXlt(date)$mon + 1)
%>% group_by(month)
%>% summarize(pm25 = mean(pm25, na.rm = TRUE),
o3 = max(o3tmean2, na.rm = TRUE),
chicago %>% mutate(month = as.POSIXlt(date)$mon + 1) %>% group_by(month) %>% summarize(pm25 = mean(pm25, na.rm = TRUE), o3 = max(o3tmean2, na.rm = TRUE), no2 = median(no2tmean2, na.rm = TRUE))
chicago %>% mutate(month = as.POSIXlt(date)$mon + 1)
%>% group_by(month) %>% summarize(pm25 = mean(pm25, na.rm = TRUE), o3 = max(o3tmean2, na.rm = TRUE), no2 = median(no2tmean2, na.rm = TRUE))
chicago %>% mutate(month = as.POSIXlt(date)$mon + 1) %>% group_by(month) %>% summarize(pm25 = mean(pm25, na.rm = TRUE), o3 = max(o3tmean2, na.rm = TRUE), no2 = median(no2tmean2, na.rm = TRUE))
setwd("D://Pedro//TID//BI4TD//DATA SCIENCE//COURSERA//Code//Data Cleaning//data")
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(fileURL, "us_communities.csv")
us_comm_df <- read.csv("us_communities.csv")
head(us_comm_df)
head(select(us_comm_df, C(1:5))
)
comms_df <- read.csv("us_communities.csv")
comms_df2 <- filter(comms_df, AGS = 6 & ACR = 3)
comms_df2 <- filter(comms_df, AGS == 6 & ACR == 3)
head(comms_df2, AGS, ACR)
head(select(comms_df2, AGS, ACR))
head(select(comms_df2, agricultureLogical))
head(comms_df2)
comms_df3 <- comms_df[AGS == 6 & ACR == 3]
comms_df3 <- comms_df[AGS == 6 & ACR == 3,]
comms_df3 <- comms_df[comms_df$AGS == 6 & comms_df$ACR == 3,]
agricultureLogical <- comms_df[comms_df$AGS == 6 & comms_df$ACR == 3,]
which(agricultureLogical)
agricultureLogical <- comms_df$AGS == 6 & comms_df$ACR == 3
which(agricultureLogical)
which(agricultureLogical)[1:3]
library(jpeg)
setwd("D://Pedro//TID//BI4TD//DATA SCIENCE//COURSERA//Code//Data Cleaning//data")
install.packages("jpeg")
library(jpeg)
setwd("D://Pedro//TID//BI4TD//DATA SCIENCE//COURSERA//Code//Data Cleaning//data")
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg"
download.file(fileURL, "Fjeff.jpg")
download.file(fileURL, "Fjeff.jpg", method = "curl")
download.file(fileURL, "Fjeff.jpg", method = "curl")
download.file(fileURL, "Fjeff.jpg")
download.file(fileURL, "Fjeff.jpg", mode ="wb")
img <- readJPEG(fileURL, native = TRUE)
img <- readJPEG(jpgName, native = TRUE)
jpgName <- "Fjeff.jpg"
img <- readJPEG(jpgName, native = TRUE)
quantile(img, probs = c(0.3, 0.8))
gdpURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
gdpName <- "gdp.csv"
download.file(gdpURL, gdpName)
gdp <- read.csv(gdpName)
head(gdp)
gdp <- gdp[5:gdpL,]
gdpL <- nrow(gdp)
gdp <- gdp[5:gdpL,]
head(gdp)
colnames(gdp) <- c("country_short", "rank", "x.1", "country_long", "gdp", "x.2", "x.3", "x.4", "x.5", "x.6" )
head(gdp)
gdp <- select(gdp, country_short, rank, gdp)
head(gdp)
gdp$gdp <- as.numeric(gdp$gdp)
head(gdp)
gdp <- read.csv(gdpName)
gdpL <- nrow(gdp)
gdp <- gdp[5:gdpL,]
colnames(gdp) <- c("country_short", "rank", "x.1", "country_long", "gdp", "x.2", "x.3", "x.4", "x.5", "x.6" )
gdp <- select(gdp, country_short, rank, gdp)
head(gdp)
eduURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
eduName <- "Edu.csv"
download.file(eduURL, eduName)
head(edu)
edu <- read.csv(eduName)
head(edu)
merge_data <- merge(gdp, edu, by.x = "country_short", by.y = "CountryCode", all = TRUE)
nrow(merge_data)
nrow(edu)
nrow(gdp)
merge_data <- merge(gdp, edu, by.x = "country_short", by.y = "CountryCode", all = FALSE)
nrow(merge_data)
nrow(edu)
nrow(gdp)
merge_data <- merge(gdp, edu, by.x = "country_short", by.y = "CountryCode")
nrow(merge_data)
nrow(edu)
nrow(gdp)
470/2
head(merge_data)
edu <- select(edu, CountryCode)
head(edu)
nrow(edu)
merge_data <- merge(gdp, edu, by.x = "country_short", by.y = "CountryCode")
head(merge_data)
nrow(merge_data)
tail(merge_data)
nrow(gdp)
nrow(edu)
nrow(merge_data)
gdp <- read.csv(gdpName)
gdpL <- nrow(gdp)
gdp <- gdp[5:gdpL,]
colnames(gdp) <- c("country_short", "rank", "x.1", "country_long", "gdp", "x.2", "x.3", "x.4", "x.5", "x.6" )
gdp <- select(gdp, country_short, rank, gdp)
head(gdp)
nrow(gdp)
gdp <- read.csv(gdpName)
gdp <- gdp[5:195,]
colnames(gdp) <- c("country_short", "rank", "x.1", "country_long", "gdp", "x.2", "x.3", "x.4", "x.5", "x.6" )
gdp <- select(gdp, country_short, rank, gdp)
head(gdp)
nrow(gdp)
gdp <- read.csv(gdpName)
gdp <- gdp[5:194,]
colnames(gdp) <- c("country_short", "rank", "x.1", "country_long", "gdp", "x.2", "x.3", "x.4", "x.5", "x.6" )
gdp <- select(gdp, country_short, rank, gdp)
head(gdp)
nrow(gdp)
merge_data <- merge(gdp, edu, by.x = "country_short", by.y = "CountryCode")
nrow(merge_data)
edu <- read.csv(eduName)
head(edu)
merge_data <- merge(gdp, edu, by.x = "country_short", by.y = "CountryCode")
nrow(merge_data)
nrow(edu)
nrow(gdp)
merge_data <- arrange(merge_data, desc(rank))
merge_data[13, "country_short"]
tail(merge_data)
merge_data[13, "Short.Name"]
write.csv(merge_data, "merged.csv")
merge_data <- merge(gdp, edu, by.x = "country_short", by.y = "CountryCode")
nrow(merge_data)
nrow(edu)
nrow(gdp)
merge_data$rank <- as.numeric(merge_data$rank)
merge_data <- arrange(merge_data, desc(rank))
merge_data[13, "Short.Name"]
grouped <- group_by(merged_data, "Income Group")
grouped <- group_by(merge_data, "Income Group")
summarize(grouped, rank_mean = mean(rank))
head(grouped)
colnames(merge_data)
grouped <- group_by(merge_data, Income.Group)
summarize(grouped, rank_mean = mean(rank))
summarize(grouped, count)
summarize(grouped, count = count(rank))
grouped <- group_by(merge_data, Income.Group)
summarize(grouped, count = count(rank))
ddply(merge_data, .(Income.Group), summarize, sum=sum(count))
ddply(merge_data, .(Income.Group), summarize, sum=count
ddply(merge_data, .(Income.Group), summarize, sum=count)
ddply(merge_data, .(Income.Group), summarize, sum=count)
table(merge_data$Income.Group)
table(quantile(merge_data$rank), merge_data$Income.Group)
table(merge_data$quantile = quantile(merge_data$rank), merge_data$Income.Group)
table(merge_data$quantile <- quantile(merge_data$rank), merge_data$Income.Group)
merge_data$quantile <- quantile(merge_data$rank)
q <- quantile(merge_data$rank)
q
merge_data$top_38 <- ifelse(merge_data$rank < 38, FALSE, TRUE)
table(merge_data$top_38)
table(merge_data$top_38, quantile(merge_data$Income.Group))
table(merge_data$top_38, quantile(merge_data$rank))
merge_data$rank_q <- cut(merge_data$rank)
merge_data$rank_q <- cut(merge_data$rank, breaks=quantile(merge_data$rank))
table(merge_data$top_38, merge_data$rank_q)
table(merge_data$rank_q)
quantile(merge_data$rank_q)
quantile(merge_data$rank)
merge_data$rank_q <- cut(merge_data$rank, breaks=quantile(merge_data$rank, c(0.2, 0.4, 0.6, 0.8)))
table(merge_data$rank_q)
table(merge_data$top_38, merge_data$rank_q)
quantile(merge_data$rank, c(0.2, 0.4, 0.6, 0.8))
merge_data$rank_q <- cut(merge_data$rank, breaks=quantile(merge_data$rank, c(0, 0.2, 0.4, 0.6, 0.8, 1)))
table(merge_data$rank_q)
quantile(merge_data$rank, c(0.2, 0.4, 0.6, 0.8))
table(merge_data$top_38, merge_data$rank_q)
table(merge_data$Income.Group, merge_data$rank_q)
merge_data$rank_q <- cut(merge_data$rank, breaks=quantile(merge_data$rank, c(0.2, 0.4, 0.6, 0.8)))
table(merge_data$Income.Group, merge_data$rank_q)
merge_data$rank_q <- cut(merge_data$rank, breaks=quantile(merge_data$rank, c(0, 0.2, 0.4, 0.6, 0.8)))
table(merge_data$Income.Group, merge_data$rank_q)
merge_data$rank_q <- cut(merge_data$rank, breaks=quantile(merge_data$rank, c(0, 0.2, 0.4, 0.6, 0.8, 1)))
table(merge_data$Income.Group, merge_data$rank_q)
merge_data[merge_data$rank_q == "(1,38,6]", ]
merge_data[merge_data$rank_q = "(1,38.6]", ]
merge_data[merge_data$rank_q == "(1,38.6]", ]
merge_data[merge_data$rank_q == "(1,38.6]", rank]
merge_data[merge_data$rank_q == "(1,38.6]", "rank"]
nrow(merge_data)
merge_data$rank
gdp[gdp$rank == 131,]
table(merge_data$Income.Group, merge_data$top_38)
merge_data[merge_data$top_38 == TRUE, "rank"]
merge_data$top_38 <- ifelse(merge_data$rank > 38, FALSE, TRUE)
table(merge_data$Income.Group, merge_data$top_38)
merge_data$rank_q <- cut(merge_data$rank, breaks=quantile(merge_data$rank, c(0, 0.2, 0.4, 0.6, 0.8, 1)))
table(merge_data$Income.Group, merge_data$rank_q)
libray(Hmisc)
library(Hmisc)
merge_data$rank_q <- cut2(merge_data$rank, breaks=quantile(merge_data$rank, g=5
merge_data$rank_q <- cut2(merge_data$rank, breaks=quantile(merge_data$rank, g=5)
merge_data$rank_q <- cut2(merge_data$rank, breaks=quantile(merge_data$rank, g=5)
merge_data$rank_q <- cut2(merge_data$rank, g=5)
merge_data$rank_q <- cut2(merge_data$rank, g=5)
table(merge_data$Income.Group, merge_data$rank_q)
merge_data$top_38 <- ifelse(merge_data$rank > 38, FALSE, TRUE)
table(merge_data$Income.Group, merge_data$top_38)
